2025-04-15 09:16:57,576 - INFO - Loading environment variables...
2025-04-15 09:16:57,937 - INFO - [1mStart Processing file: theory_evaluation\llm_handler.py[0m
2025-04-15 09:17:09,095 - WARNING - Stripped Markdown-style triple backtick fences from LLM output.
2025-04-15 09:17:09,101 - INFO - 

2025-04-15 09:17:09,101 - INFO - TEST CASE 1 Retry 0
2025-04-15 09:17:09,101 - INFO - ---------------
2025-04-15 09:17:09,102 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

def test_openai_llm_initialization(mock_openai_client):
    mock_azure, mock_openai = mock_openai_client

2025-04-15 09:17:09,102 - INFO - ---------------
2025-04-15 09:17:10,812 - INFO - Test Result 1- False
2025-04-15 09:17:10,814 - INFO - Test Error 1 - E                                                                        [100%]
=================================== ERRORS ====================================
______________ ERROR at setup of test_openai_llm_initialization _______________
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 7
  def test_openai_llm_initialization(mock_openai_client):
E       fixture 'mock_openai_client' not found
>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py:7
=========================== short test summary info ===========================
ERROR temp/temp.py::test_openai_llm_initialization
1 error in 1.01s
2025-04-15 09:17:13,400 - INFO - TEST CASE 1 Retry 1
2025-04-15 09:17:13,400 - INFO - ---------------
2025-04-15 09:17:13,400 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest
from unittest.mock import MagicMock

@pytest.fixture
def mock_openai_client():
    mock_azure = MagicMock()
    mock_openai = MagicMock()
    return mock_azure, mock_openai

def test_openai_llm_initialization(mock_openai_client):
    mock_azure, mock_openai = mock_openai_client
    # Add assertions or test logic here

2025-04-15 09:17:13,400 - INFO - ---------------
2025-04-15 09:17:15,616 - INFO - Test Result 2- True
2025-04-15 09:17:15,617 - INFO - Test Error 2 - 
.                                                                        [100%]
1 passed in 1.37s
2025-04-15 09:17:15,617 - INFO - 

2025-04-15 09:17:15,617 - INFO - TEST CASE 2 Retry 0
2025-04-15 09:17:15,617 - INFO - ---------------
2025-04-15 09:17:15,617 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

def test_openai_json_completion(mock_openai_client):
    _, mock_openai = mock_openai_client
    mock_response = MagicMock()
    mock_response.choices = [MagicMock(message=MagicMock(content=json.dumps({"answer": "42", "explanation": "The answer is 42"})))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=mock_response)

2025-04-15 09:17:15,617 - INFO - ---------------
2025-04-15 09:17:18,306 - INFO - Test Result 1- False
2025-04-15 09:17:18,307 - INFO - Test Error 1 - E                                                                        [100%]
=================================== ERRORS ====================================
________________ ERROR at setup of test_openai_json_completion ________________
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 7
  def test_openai_json_completion(mock_openai_client):
E       fixture 'mock_openai_client' not found
>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py:7
=========================== short test summary info ===========================
ERROR temp/temp.py::test_openai_json_completion
1 error in 1.27s
2025-04-15 09:17:20,053 - INFO - TEST CASE 2 Retry 1
2025-04-15 09:17:20,054 - INFO - ---------------
2025-04-15 09:17:20,054 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

from unittest.mock import MagicMock, AsyncMock
import pytest

@pytest.fixture
def mock_openai_client(mocker):
    mock_openai = mocker.patch('openai.OpenAI')
    return mocker, mock_openai

def test_openai_json_completion(mock_openai_client):
    _, mock_openai = mock_openai_client
    mock_response = MagicMock()
    mock_response.choices = [MagicMock(message=MagicMock(content=json.dumps({"answer": "42", "explanation": "The answer is 42"})))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=mock_response)

2025-04-15 09:17:20,054 - INFO - ---------------
2025-04-15 09:17:22,268 - INFO - Test Result 2- False
2025-04-15 09:17:22,268 - INFO - Test Error 2 - 
E                                                                        [100%]
=================================== ERRORS ====================================
________________ ERROR at setup of test_openai_json_completion ________________
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 15
  def test_openai_json_completion(mock_openai_client):
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 10
  @pytest.fixture
  def mock_openai_client(mocker):
E       fixture 'mocker' not found
>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_openai_client, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py:10
=========================== short test summary info ===========================
ERROR temp/temp.py::test_openai_json_completion
1 error in 1.36s
2025-04-15 09:17:24,629 - INFO - TEST CASE 2 Retry 2
2025-04-15 09:17:24,629 - INFO - ---------------
2025-04-15 09:17:24,630 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest
from unittest.mock import MagicMock, AsyncMock

@pytest.fixture
def mock_openai_client(mocker):
    mock_openai = mocker.patch('openai.OpenAI')
    return mocker, mock_openai

def test_openai_json_completion(mock_openai_client):
    _, mock_openai = mock_openai_client
    mock_response = MagicMock()
    mock_response.choices = [MagicMock(message=MagicMock(content=json.dumps({"answer": "42", "explanation": "The answer is 42"})))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=mock_response)

2025-04-15 09:17:24,630 - INFO - ---------------
2025-04-15 09:17:26,623 - INFO - Test Result 3- False
2025-04-15 09:17:26,623 - INFO - Test Error 3 - 
E                                                                        [100%]
=================================== ERRORS ====================================
________________ ERROR at setup of test_openai_json_completion ________________
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 15
  def test_openai_json_completion(mock_openai_client):
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 10
  @pytest.fixture
  def mock_openai_client(mocker):
E       fixture 'mocker' not found
>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_openai_client, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py:10
=========================== short test summary info ===========================
ERROR temp/temp.py::test_openai_json_completion
1 error in 1.13s
2025-04-15 09:17:26,623 - INFO - Failed after all retries for test case 2
2025-04-15 09:17:26,623 - INFO - 

2025-04-15 09:17:26,623 - INFO - TEST CASE 3 Retry 0
2025-04-15 09:17:26,623 - INFO - ---------------
2025-04-15 09:17:26,623 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

def test_openai_streaming(mock_openai_client):
    _, mock_openai = mock_openai_client
    mock_chunk = MagicMock()
    mock_chunk.choices = [MagicMock(delta=MagicMock(content="streaming content"))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=[mock_chunk])

2025-04-15 09:17:26,623 - INFO - ---------------
2025-04-15 09:17:28,379 - INFO - Test Result 1- False
2025-04-15 09:17:28,379 - INFO - Test Error 1 - E                                                                        [100%]
=================================== ERRORS ====================================
___________________ ERROR at setup of test_openai_streaming ___________________
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 7
  def test_openai_streaming(mock_openai_client):
E       fixture 'mock_openai_client' not found
>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py:7
=========================== short test summary info ===========================
ERROR temp/temp.py::test_openai_streaming
1 error in 1.08s
2025-04-15 09:17:30,288 - INFO - TEST CASE 3 Retry 1
2025-04-15 09:17:30,289 - INFO - ---------------
2025-04-15 09:17:30,289 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest
from unittest.mock import MagicMock, AsyncMock

@pytest.fixture
def mock_openai_client(mocker):
    mock_openai = mocker.patch('openai.OpenAI')
    return None, mock_openai

def test_openai_streaming(mock_openai_client):
    _, mock_openai = mock_openai_client
    mock_chunk = MagicMock()
    mock_chunk.choices = [MagicMock(delta=MagicMock(content="streaming content"))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=[mock_chunk])

2025-04-15 09:17:30,289 - INFO - ---------------
2025-04-15 09:17:32,154 - INFO - Test Result 2- False
2025-04-15 09:17:32,155 - INFO - Test Error 2 - 
E                                                                        [100%]
=================================== ERRORS ====================================
___________________ ERROR at setup of test_openai_streaming ___________________
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 15
  def test_openai_streaming(mock_openai_client):
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 10
  @pytest.fixture
  def mock_openai_client(mocker):
E       fixture 'mocker' not found
>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_openai_client, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py:10
=========================== short test summary info ===========================
ERROR temp/temp.py::test_openai_streaming
1 error in 1.08s
2025-04-15 09:17:34,136 - INFO - TEST CASE 3 Retry 2
2025-04-15 09:17:34,136 - INFO - ---------------
2025-04-15 09:17:34,136 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest
from unittest.mock import MagicMock, AsyncMock

@pytest.fixture
def mock_openai_client(monkeypatch):
    mock_openai = MagicMock()
    monkeypatch.setattr('openai.OpenAI', mock_openai)
    return monkeypatch, mock_openai

def test_openai_streaming(mock_openai_client):
    _, mock_openai = mock_openai_client
    mock_chunk = MagicMock()
    mock_chunk.choices = [MagicMock(delta=MagicMock(content="streaming content"))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=[mock_chunk])

2025-04-15 09:17:34,137 - INFO - ---------------
2025-04-15 09:17:36,615 - INFO - Test Result 3- True
2025-04-15 09:17:36,615 - INFO - Test Error 3 - 
.                                                                        [100%]
1 passed in 1.67s
2025-04-15 09:17:36,615 - INFO - 

2025-04-15 09:17:36,615 - INFO - TEST CASE 4 Retry 0
2025-04-15 09:17:36,615 - INFO - ---------------
2025-04-15 09:17:36,615 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

def test_openai_chat_completion(mock_openai_client):
    _, mock_openai = mock_openai_client
    mock_response = MagicMock()
    mock_response.choices = [MagicMock(message=MagicMock(content="chat completion content"))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=mock_response)

2025-04-15 09:17:36,615 - INFO - ---------------
2025-04-15 09:17:39,355 - INFO - Test Result 1- False
2025-04-15 09:17:39,355 - INFO - Test Error 1 - E                                                                        [100%]
=================================== ERRORS ====================================
________________ ERROR at setup of test_openai_chat_completion ________________
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 7
  def test_openai_chat_completion(mock_openai_client):
E       fixture 'mock_openai_client' not found
>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py:7
=========================== short test summary info ===========================
ERROR temp/temp.py::test_openai_chat_completion
1 error in 1.61s
2025-04-15 09:17:41,774 - INFO - TEST CASE 4 Retry 1
2025-04-15 09:17:41,775 - INFO - ---------------
2025-04-15 09:17:41,775 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest
from unittest.mock import MagicMock, AsyncMock

@pytest.fixture
def mock_openai_client(mocker):
    mock_openai = mocker.patch('openai.OpenAI')
    return mocker, mock_openai

def test_openai_chat_completion(mock_openai_client):
    _, mock_openai = mock_openai_client
    mock_response = MagicMock()
    mock_response.choices = [MagicMock(message=MagicMock(content="chat completion content"))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=mock_response)

2025-04-15 09:17:41,776 - INFO - ---------------
2025-04-15 09:17:43,854 - INFO - Test Result 2- False
2025-04-15 09:17:43,854 - INFO - Test Error 2 - 
E                                                                        [100%]
=================================== ERRORS ====================================
________________ ERROR at setup of test_openai_chat_completion ________________
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 15
  def test_openai_chat_completion(mock_openai_client):
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 10
  @pytest.fixture
  def mock_openai_client(mocker):
E       fixture 'mocker' not found
>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_openai_client, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py:10
=========================== short test summary info ===========================
ERROR temp/temp.py::test_openai_chat_completion
1 error in 1.11s
2025-04-15 09:17:45,617 - INFO - TEST CASE 4 Retry 2
2025-04-15 09:17:45,617 - INFO - ---------------
2025-04-15 09:17:45,617 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest
from unittest.mock import MagicMock, AsyncMock

@pytest.fixture
def mock_openai_client(mocker):
    mock_openai = mocker.patch('openai.OpenAI')
    return mock_openai

def test_openai_chat_completion(mock_openai_client):
    mock_openai = mock_openai_client
    mock_response = MagicMock()
    mock_response.choices = [MagicMock(message=MagicMock(content="chat completion content"))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=mock_response)

2025-04-15 09:17:45,617 - INFO - ---------------
2025-04-15 09:17:47,336 - INFO - Test Result 3- False
2025-04-15 09:17:47,336 - INFO - Test Error 3 - 
E                                                                        [100%]
=================================== ERRORS ====================================
________________ ERROR at setup of test_openai_chat_completion ________________
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 15
  def test_openai_chat_completion(mock_openai_client):
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 10
  @pytest.fixture
  def mock_openai_client(mocker):
E       fixture 'mocker' not found
>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_openai_client, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py:10
=========================== short test summary info ===========================
ERROR temp/temp.py::test_openai_chat_completion
1 error in 0.97s
2025-04-15 09:17:47,336 - INFO - Failed after all retries for test case 4
2025-04-15 09:17:47,337 - INFO - 

2025-04-15 09:17:47,337 - INFO - TEST CASE 5 Retry 0
2025-04-15 09:17:47,337 - INFO - ---------------
2025-04-15 09:17:47,337 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

def test_execute_text_generation(mock_openai_client):
    _, mock_openai = mock_openai_client
    mock_response = MagicMock()
    mock_response.choices = [MagicMock(message=MagicMock(content="text generation content"))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=mock_response)

2025-04-15 09:17:47,337 - INFO - ---------------
2025-04-15 09:17:49,148 - INFO - Test Result 1- False
2025-04-15 09:17:49,148 - INFO - Test Error 1 - E                                                                        [100%]
=================================== ERRORS ====================================
_______________ ERROR at setup of test_execute_text_generation ________________
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 7
  def test_execute_text_generation(mock_openai_client):
E       fixture 'mock_openai_client' not found
>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py:7
=========================== short test summary info ===========================
ERROR temp/temp.py::test_execute_text_generation
1 error in 1.06s
2025-04-15 09:17:50,851 - INFO - TEST CASE 5 Retry 1
2025-04-15 09:17:50,851 - INFO - ---------------
2025-04-15 09:17:50,851 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

from unittest.mock import MagicMock, AsyncMock
import pytest

@pytest.fixture
def mock_openai_client(mocker):
    mock_openai = mocker.patch('openai.OpenAI')
    return mocker, mock_openai

def test_execute_text_generation(mock_openai_client):
    _, mock_openai = mock_openai_client
    mock_response = MagicMock()
    mock_response.choices = [MagicMock(message=MagicMock(content="text generation content"))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=mock_response)

2025-04-15 09:17:50,851 - INFO - ---------------
2025-04-15 09:17:52,755 - INFO - Test Result 2- False
2025-04-15 09:17:52,756 - INFO - Test Error 2 - 
E                                                                        [100%]
=================================== ERRORS ====================================
_______________ ERROR at setup of test_execute_text_generation ________________
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 15
  def test_execute_text_generation(mock_openai_client):
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 10
  @pytest.fixture
  def mock_openai_client(mocker):
E       fixture 'mocker' not found
>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_openai_client, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py:10
=========================== short test summary info ===========================
ERROR temp/temp.py::test_execute_text_generation
1 error in 1.08s
2025-04-15 09:17:54,396 - INFO - TEST CASE 5 Retry 2
2025-04-15 09:17:54,396 - INFO - ---------------
2025-04-15 09:17:54,396 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest
from unittest.mock import MagicMock, AsyncMock

@pytest.fixture
def mock_openai_client(mocker):
    mock_openai = mocker.patch('openai.OpenAI')
    return mocker, mock_openai

def test_execute_text_generation(mock_openai_client):
    _, mock_openai = mock_openai_client
    mock_response = MagicMock()
    mock_response.choices = [MagicMock(message=MagicMock(content="text generation content"))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=mock_response)

2025-04-15 09:17:54,397 - INFO - ---------------
2025-04-15 09:17:56,285 - INFO - Test Result 3- False
2025-04-15 09:17:56,285 - INFO - Test Error 3 - 
E                                                                        [100%]
=================================== ERRORS ====================================
_______________ ERROR at setup of test_execute_text_generation ________________
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 15
  def test_execute_text_generation(mock_openai_client):
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 10
  @pytest.fixture
  def mock_openai_client(mocker):
E       fixture 'mocker' not found
>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_openai_client, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py:10
=========================== short test summary info ===========================
ERROR temp/temp.py::test_execute_text_generation
1 error in 1.07s
2025-04-15 09:17:56,285 - INFO - Failed after all retries for test case 5
2025-04-15 09:17:56,285 - INFO - 

2025-04-15 09:17:56,285 - INFO - TEST CASE 6 Retry 0
2025-04-15 09:17:56,285 - INFO - ---------------
2025-04-15 09:17:56,285 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

def test_execute_vision(mock_openai_client):
    _, mock_openai = mock_openai_client
    mock_response = MagicMock()
    mock_response.choices = [MagicMock(message=MagicMock(content="vision content"))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=mock_response)

2025-04-15 09:17:56,285 - INFO - ---------------
2025-04-15 09:17:58,622 - INFO - Test Result 1- False
2025-04-15 09:17:58,622 - INFO - Test Error 1 - E                                                                        [100%]
=================================== ERRORS ====================================
____________________ ERROR at setup of test_execute_vision ____________________
file C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py, line 7
  def test_execute_vision(mock_openai_client):
E       fixture 'mock_openai_client' not found
>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py:7
=========================== short test summary info ===========================
ERROR temp/temp.py::test_execute_vision
1 error in 1.36s
2025-04-15 09:18:00,321 - INFO - TEST CASE 6 Retry 1
2025-04-15 09:18:00,322 - INFO - ---------------
2025-04-15 09:18:00,322 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest
from unittest.mock import MagicMock, AsyncMock

@pytest.fixture
def mock_openai_client():
    mock_openai = MagicMock()
    return None, mock_openai

def test_execute_vision(mock_openai_client):
    _, mock_openai = mock_openai_client
    mock_response = MagicMock()
    mock_response.choices = [MagicMock(message=MagicMock(content="vision content"))]
    mock_openai.return_value.chat.completions.create = AsyncMock(return_value=mock_response)

2025-04-15 09:18:00,323 - INFO - ---------------
2025-04-15 09:18:02,604 - INFO - Test Result 2- True
2025-04-15 09:18:02,604 - INFO - Test Error 2 - 
.                                                                        [100%]
1 passed in 1.14s
2025-04-15 09:18:02,606 - INFO - [1mEnd Processing file: theory_evaluation\llm_handler.py[0m

2025-04-15 09:18:02,606 - INFO - [1mStart Processing file: theory_evaluation\llm_utils.py[0m
2025-04-15 09:18:07,391 - WARNING - Stripped Markdown-style triple backtick fences from LLM output.
2025-04-15 09:18:07,395 - INFO - 

2025-04-15 09:18:07,395 - INFO - TEST CASE 1 Retry 0
2025-04-15 09:18:07,396 - INFO - ---------------
2025-04-15 09:18:07,396 - INFO - 
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
def test_initialise_prompt_success():
    agent = "test_agent"
    prompt_content = "Hello, {$name}!"
    config_content = "name: World"

2025-04-15 09:18:07,396 - INFO - ---------------
2025-04-15 09:18:08,161 - INFO - Test Result 1- True
2025-04-15 09:18:08,161 - INFO - Test Error 1 - .                                                                        [100%]
1 passed in 0.14s
2025-04-15 09:18:08,161 - INFO - 

2025-04-15 09:18:08,161 - INFO - TEST CASE 2 Retry 0
2025-04-15 09:18:08,161 - INFO - ---------------
2025-04-15 09:18:08,161 - INFO - 
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
def test_initialise_prompt_no_config_path():
    with patch("theory_evaluation.llm_utils.open", side_effect=FileNotFoundError):
        result = initialise_prompt("non_existent_agent")
        assert result is None

2025-04-15 09:18:08,161 - INFO - ---------------
2025-04-15 09:18:08,761 - INFO - Test Result 1- False
2025-04-15 09:18:08,761 - INFO - Test Error 1 - F                                                                        [100%]
================================== FAILURES ===================================
____________________ test_initialise_prompt_no_config_path ____________________
temp\temp.py:6: in test_initialise_prompt_no_config_path
    with patch("theory_evaluation.llm_utils.open", side_effect=FileNotFoundError):
E   NameError: name 'patch' is not defined
=========================== short test summary info ===========================
FAILED temp/temp.py::test_initialise_prompt_no_config_path - NameError: name ...
1 failed in 0.14s
2025-04-15 09:18:09,891 - INFO - TEST CASE 2 Retry 1
2025-04-15 09:18:09,891 - INFO - ---------------
2025-04-15 09:18:09,892 - INFO - 
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import os
import re
import yaml
from unittest.mock import patch

def test_initialise_prompt_no_config_path():
    with patch("theory_evaluation.llm_utils.open", side_effect=FileNotFoundError):
        result = initialise_prompt("non_existent_agent")
        assert result is None

2025-04-15 09:18:09,892 - INFO - ---------------
2025-04-15 09:18:10,804 - INFO - Test Result 2- True
2025-04-15 09:18:10,804 - INFO - Test Error 2 - 
.                                                                        [100%]
1 passed in 0.22s
2025-04-15 09:18:10,804 - INFO - 

2025-04-15 09:18:10,804 - INFO - TEST CASE 3 Retry 0
2025-04-15 09:18:10,804 - INFO - ---------------
2025-04-15 09:18:10,804 - INFO - 
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
def test_initialise_settings_success():
    agent = "test_agent"
    settings_content = "key: value"

2025-04-15 09:18:10,804 - INFO - ---------------
2025-04-15 09:18:11,595 - INFO - Test Result 1- True
2025-04-15 09:18:11,596 - INFO - Test Error 1 - .                                                                        [100%]
1 passed in 0.19s
2025-04-15 09:18:11,596 - INFO - 

2025-04-15 09:18:11,596 - INFO - TEST CASE 4 Retry 0
2025-04-15 09:18:11,596 - INFO - ---------------
2025-04-15 09:18:11,596 - INFO - 
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
def test_initialise_settings_no_config_path():
    with patch("theory_evaluation.llm_utils.open", side_effect=FileNotFoundError):
        result = initialise_settings("non_existent_agent")
        assert result is None

2025-04-15 09:18:11,596 - INFO - ---------------
2025-04-15 09:18:12,296 - INFO - Test Result 1- False
2025-04-15 09:18:12,296 - INFO - Test Error 1 - F                                                                        [100%]
================================== FAILURES ===================================
___________________ test_initialise_settings_no_config_path ___________________
temp\temp.py:6: in test_initialise_settings_no_config_path
    with patch("theory_evaluation.llm_utils.open", side_effect=FileNotFoundError):
E   NameError: name 'patch' is not defined
=========================== short test summary info ===========================
FAILED temp/temp.py::test_initialise_settings_no_config_path - NameError: nam...
1 failed in 0.17s
2025-04-15 09:18:13,297 - WARNING - Stripped Markdown-style triple backtick fences from LLM output.
2025-04-15 09:18:13,297 - INFO - TEST CASE 4 Retry 1
2025-04-15 09:18:13,298 - INFO - ---------------
2025-04-15 09:18:13,298 - INFO - 
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
from unittest.mock import patch

def test_initialise_settings_no_config_path():
    with patch("builtins.open", side_effect=FileNotFoundError):
        result = initialise_settings("non_existent_agent")
        assert result is None

2025-04-15 09:18:13,298 - INFO - ---------------
2025-04-15 09:18:14,193 - INFO - Test Result 2- True
2025-04-15 09:18:14,193 - INFO - Test Error 2 - 
.                                                                        [100%]
1 passed in 0.21s
2025-04-15 09:18:14,194 - INFO - [1mEnd Processing file: theory_evaluation\llm_utils.py[0m

2025-04-15 09:18:14,194 - INFO - [1mStart Processing file: theory_evaluation\__init__.py[0m
2025-04-15 09:18:14,195 - WARNING - No public functions found in theory_evaluation\__init__.py. Skipping test generation.

