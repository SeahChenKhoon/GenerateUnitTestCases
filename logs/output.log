2025-04-17 10:19:20,373 - INFO - Loading environment variables start
2025-04-17 10:19:20,376 - INFO - Loading environment variables completes
2025-04-17 10:19:20,376 - INFO - Initialising of LLM start
2025-04-17 10:19:20,699 - INFO - Initialising of LLM completes
2025-04-17 10:19:20,699 - INFO - Getting python file starts
2025-04-17 10:19:20,700 - INFO - Getting python file completes
2025-04-17 10:19:20,700 - INFO - 
Start Processing file: theory_evaluation\llm_utils.py
2025-04-17 10:19:20,700 - INFO - Extraction of function and class start
2025-04-17 10:19:20,700 - INFO - extraction of function and class complete
2025-04-17 10:19:20,700 - INFO - Generate Unit Test Case starts
2025-04-17 10:19:20,700 - INFO - Extract unique import start
2025-04-17 10:19:22,183 - INFO - Extract unique import complete
2025-04-17 10:19:22,184 - INFO - Update relative import start
2025-04-17 10:19:22,185 - INFO - Update relative import complete
2025-04-17 10:19:28,437 - WARNING - Stripped Markdown-style triple backtick fences from LLM output.
2025-04-17 10:19:28,438 - INFO - Generate Unit Test Case complete
2025-04-17 10:19:28,442 - INFO - run_each_pytest_function_individually start
2025-04-17 10:19:35,490 - INFO - Number of test case to process - 5
2025-04-17 10:19:35,490 - INFO - 
TEST CASE 1 Retry 0
---------------
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest



def test_initialise_prompt_success():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$key} prompt."
    expected_prompt = "This is a value prompt."

---------------
2025-04-17 10:19:36,158 - INFO - TEST CASE 1 Retry 0 - Result - Passed
2025-04-17 10:19:36,158 - INFO - Success_test_cases - import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest


def test_initialise_prompt_success():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$key} prompt."
    expected_prompt = "This is a value prompt."

2025-04-17 10:19:36,158 - INFO - Test Case 1 processed successfully
2025-04-17 10:19:36,158 - INFO - 
TEST CASE 2 Retry 0
---------------
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest



def test_initialise_prompt_missing_placeholder():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$missing_key} prompt."
    expected_prompt = "This is a {$missing_key} prompt."

---------------
2025-04-17 10:19:36,718 - INFO - TEST CASE 2 Retry 0 - Result - Passed
2025-04-17 10:19:36,719 - INFO - Success_test_cases - import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest


def test_initialise_prompt_success():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$key} prompt."
    expected_prompt = "This is a value prompt."

def test_initialise_prompt_missing_placeholder():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$missing_key} prompt."
    expected_prompt = "This is a {$missing_key} prompt."

2025-04-17 10:19:36,719 - INFO - Test Case 2 processed successfully
2025-04-17 10:19:36,719 - INFO - 
TEST CASE 3 Retry 0
---------------
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest



def test_initialise_prompt_exception():
    agent = "test_agent"

---------------
2025-04-17 10:19:37,297 - INFO - TEST CASE 3 Retry 0 - Result - Passed
2025-04-17 10:19:37,297 - INFO - Success_test_cases - import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest


def test_initialise_prompt_success():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$key} prompt."
    expected_prompt = "This is a value prompt."

def test_initialise_prompt_missing_placeholder():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$missing_key} prompt."
    expected_prompt = "This is a {$missing_key} prompt."

def test_initialise_prompt_exception():
    agent = "test_agent"

2025-04-17 10:19:37,297 - INFO - Test Case 3 processed successfully
2025-04-17 10:19:37,297 - INFO - 
TEST CASE 4 Retry 0
---------------
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest



def test_initialise_settings_success():
    agent = "test_agent"
    settings_yaml = "key: value"
    expected_settings = {"key": "value"}

---------------
2025-04-17 10:19:37,839 - INFO - TEST CASE 4 Retry 0 - Result - Passed
2025-04-17 10:19:37,839 - INFO - Success_test_cases - import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest


def test_initialise_prompt_success():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$key} prompt."
    expected_prompt = "This is a value prompt."

def test_initialise_prompt_missing_placeholder():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$missing_key} prompt."
    expected_prompt = "This is a {$missing_key} prompt."

def test_initialise_prompt_exception():
    agent = "test_agent"

def test_initialise_settings_success():
    agent = "test_agent"
    settings_yaml = "key: value"
    expected_settings = {"key": "value"}

2025-04-17 10:19:37,839 - INFO - Test Case 4 processed successfully
2025-04-17 10:19:37,839 - INFO - 
TEST CASE 5 Retry 0
---------------
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest



def test_initialise_settings_exception():
    agent = "test_agent"

---------------
2025-04-17 10:19:38,512 - INFO - TEST CASE 5 Retry 0 - Result - Passed
2025-04-17 10:19:38,512 - INFO - Success_test_cases - import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest


def test_initialise_prompt_success():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$key} prompt."
    expected_prompt = "This is a value prompt."

def test_initialise_prompt_missing_placeholder():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$missing_key} prompt."
    expected_prompt = "This is a {$missing_key} prompt."

def test_initialise_prompt_exception():
    agent = "test_agent"

def test_initialise_settings_success():
    agent = "test_agent"
    settings_yaml = "key: value"
    expected_settings = {"key": "value"}

def test_initialise_settings_exception():
    agent = "test_agent"

2025-04-17 10:19:38,512 - INFO - Test Case 5 processed successfully
2025-04-17 10:19:38,512 - INFO - run_each_pytest_function_individually complete
2025-04-17 10:19:38,512 - INFO - Statistic theory_evaluation\llm_utils.py: 
Total test case - 5
Total test case passed - 5
Percentage Passed - 100.0%

2025-04-17 10:19:38,513 - INFO - End Processing file: theory_evaluation\llm_utils.py

