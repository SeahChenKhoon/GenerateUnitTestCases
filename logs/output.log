2025-04-16 08:37:22,308 - INFO - Loading environment variables start
2025-04-16 08:37:22,311 - INFO - Loading environment variables completes
2025-04-16 08:37:22,311 - INFO - Initialising of LLM start
2025-04-16 08:37:22,641 - INFO - Initialising of LLM completes
2025-04-16 08:37:22,641 - INFO - Getting python file starts
2025-04-16 08:37:22,642 - INFO - Getting python file completes
2025-04-16 08:37:22,642 - INFO - 
Start Processing file: theory_evaluation\utils.py
2025-04-16 08:37:22,642 - INFO - Extraction of function and class start
2025-04-16 08:37:22,643 - INFO - extraction of function and class complete
2025-04-16 08:37:22,643 - INFO - Generate Unit Test Case starts
2025-04-16 08:37:22,643 - INFO - Extract unique import start
2025-04-16 08:37:25,659 - INFO - Extract unique import complete
2025-04-16 08:37:25,659 - INFO - Update relative import start
2025-04-16 08:37:25,661 - INFO - Update relative import complete
2025-04-16 08:37:47,370 - INFO - Generate Unit Test Case complete
2025-04-16 08:37:47,374 - INFO - run_each_pytest_function_individually start
2025-04-16 08:38:17,928 - INFO - test_cases_str - @patch("theory_evaluation.utils.SessionLocal", new_callable=MagicMock)
def test_init_db_session(mock_session_local):
    mock_engine = MagicMock()
    with patch("theory_evaluation.utils.create_engine", return_value=mock_engine):
        init_db_session()
        assert hasattr(mock_session_local, "return_value")

@patch("theory_evaluation.utils.SessionLocal", new_callable=MagicMock)
def test_get_db(mock_session_local):
    with get_db() as db:
        assert db == mock_session_local.return_value

@patch("theory_evaluation.utils.get_db")
def test_validate_user_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_user_info = MagicMock()
    mock_user_info.email = "test@example.com"
    mock_user_info.status = 1
    mock_session.query.return_value.filter.return_value.first.return_value = mock_user_info

    result = validate_user("test@example.com")
    assert result is True

@patch("theory_evaluation.utils.get_db")
def test_validate_user_not_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_session.query.return_value.filter.return_value.first.return_value = None

    result = validate_user("test@example.com")
    assert result is False

@patch("theory_evaluation.utils.get_db")
def test_validate_user_operational_error(mock_get_db):
    mock_get_db.side_effect = OperationalError("Test", "Test", "Test")

    result = validate_user("test@example.com")
    assert result is None

@patch("theory_evaluation.utils.get_db")
def test_validate_user_sqlalchemy_error(mock_get_db):
    mock_get_db.side_effect = SQLAlchemyError("Test")

    result = validate_user("test@example.com")
    assert result is None

@patch("theory_evaluation.utils.get_db")
def test_get_marking_scheme_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_curriculum = MagicMock()
    mock_curriculum.question = "What is Python?"
    mock_curriculum.marking_scheme = "Correct"
    mock_curriculum.model_answer = "Python is a programming language."
    mock_session.query.return_value.filter.return_value.first.return_value = mock_curriculum

    result = get_marking_scheme(UUID("12345678-1234-5678-1234-567812345678"))
    assert result == ("What is Python?", "Correct", "Python is a programming language.")

@patch("theory_evaluation.utils.get_db")
def test_get_marking_scheme_not_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_session.query.return_value.filter.return_value.first.return_value = None

    result = get_marking_scheme(UUID("12345678-1234-5678-1234-567812345678"))
    assert result == (None, None, None)

@patch("theory_evaluation.utils.get_db")
def test_get_marking_scheme_operational_error(mock_get_db):
    mock_get_db.side_effect = OperationalError("Test", "Test", "Test")

    result = get_marking_scheme(UUID("12345678-1234-5678-1234-567812345678"))
    assert result == (None, None, None)

@patch("theory_evaluation.utils.get_db")
def test_get_marking_scheme_sqlalchemy_error(mock_get_db):
    mock_get_db.side_effect = SQLAlchemyError("Test")

    result = get_marking_scheme(UUID("12345678-1234-5678-1234-567812345678"))
    assert result == (None, None, None)

@patch("theory_evaluation.utils.get_db")
def test_get_user_performance_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_performance = MagicMock()
    mock_performance.user_attempts = 1
    mock_performance.llm_evaluation = "Good"
    mock_performance.user_grade = "Pass"
    mock_performance.llm_evaluation_status = 2
    mock_session.query.return_value.filter.return_value.order_by.return_value.first.return_value = mock_performance

    result = get_user_performance("test@example.com", UUID("12345678-1234-5678-1234-567812345678"))
    assert result == (1, "Good", "Pass", 2)

@patch("theory_evaluation.utils.get_db")
def test_get_user_performance_not_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_session.query.return_value.filter.return_value.order_by.return_value.first.return_value = None

    result = get_user_performance("test@example.com", UUID("12345678-1234-5678-1234-567812345678"))
    assert result == (0, "An unexpected error occurred. Please try again.", "No grade available.", 0)

@patch("theory_evaluation.utils.get_db")
def test_get_user_performance_operational_error(mock_get_db):
    mock_get_db.side_effect = OperationalError("Test", "Test", "Test")

    result = get_user_performance("test@example.com", UUID("12345678-1234-5678-1234-567812345678"))
    assert result == (0, "An unexpected error occurred. Please try again.", "No grade available.", 0)

@patch("theory_evaluation.utils.get_db")
def test_get_user_performance_sqlalchemy_error(mock_get_db):
    mock_get_db.side_effect = SQLAlchemyError("Test")

    result = get_user_performance("test@example.com", UUID("12345678-1234-5678-1234-567812345678"))
    assert result == (0, "An unexpected error occurred. Please try again.", "No grade available.", 0)

@patch("theory_evaluation.utils.get_db")
def test_manage_user_performance_create_attempt(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_user_performance = MagicMock()
    mock_user_performance.user_attempts = 2
    mock_user_performance.llm_evaluation = None
    mock_session.query.return_value.filter.return_value.order_by.return_value.first.return_value = mock_user_performance

    result = manage_user_performance(
        mode=0,
        email="test@example.com",
        question_id=UUID("12345678-1234-5678-1234-567812345678"),
        user_response="My answer",
    )
    assert result is True
    mock_session.add.assert_called_once()

@patch("theory_evaluation.utils.get_db")
def test_manage_user_performance_update_performance(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_user_performance = MagicMock()
    mock_session.query.return_value.filter.return_value.order_by.return_value.first.return_value = mock_user_performance

    result = manage_user_performance(
        mode=1,
        email="test@example.com",
        question_id=UUID("12345678-1234-5678-1234-567812345678"),
        llm_evaluation="Good",
        llm_score=90,
        user_grade="Pass",
    )
    assert result is True
    assert mock_user_performance.llm_evaluation == "Good"
    assert mock_user_performance.llm_score == 90
    assert mock_user_performance.user_grade == "Pass"

@patch("theory_evaluation.utils.get_db")
def test_manage_user_performance_decrement_attempts(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_user_performance = MagicMock()
    mock_user_performance.user_attempts = 1
    mock_session.query.return_value.filter.return_value.order_by.return_value.first.return_value = mock_user_performance

    result = manage_user_performance(
        mode=2,
        email="test@example.com",
        question_id=UUID("12345678-1234-5678-1234-567812345678"),
    )
    assert result is True
    mock_session.delete.assert_called_once_with(mock_user_performance)

@patch("theory_evaluation.utils.get_db")
def test_manage_user_performance_operational_error(mock_get_db):
    mock_get_db.side_effect = OperationalError("Test", "Test", "Test")

    result = manage_user_performance(
        mode=0,
        email="test@example.com",
        question_id=UUID("12345678-1234-5678-1234-567812345678"),
        user_response="My answer",
    )
    assert result is False

@patch("theory_evaluation.utils.get_db")
def test_manage_user_performance_sqlalchemy_error(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_session.commit.side_effect = SQLAlchemyError("Test")

    result = manage_user_performance(
        mode=0,
        email="test@example.com",
        question_id=UUID("12345678-1234-5678-1234-567812345678"),
        user_response="My answer",
    )
    assert result is False

@patch("theory_evaluation.utils.get_db")
def test_delete_user_performance_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_user_performance = [MagicMock(), MagicMock()]
    mock_session.query.return_value.filter.return_value.all.return_value = mock_user_performance

    result = delete_user_performance("test@example.com", UUID("12345678-1234-5678-1234-567812345678"))
    assert result is True
    mock_session.delete.assert_has_calls([pytest.call(mock_user_performance[0]), pytest.call(mock_user_performance[1])])

@patch("theory_evaluation.utils.get_db")
def test_delete_user_performance_not_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_session.query.return_value.filter.return_value.all.return_value = []

    result = delete_user_performance("test@example.com", UUID("12345678-1234-5678-1234-567812345678"))
    assert result is False

@patch("theory_evaluation.utils.get_db")
def test_delete_user_performance_operational_error(mock_get_db):
    mock_get_db.side_effect = OperationalError("Test", "Test", "Test")

    result = delete_user_performance("test@example.com", UUID("12345678-1234-5678-1234-567812345678"))
    assert result is False

@patch("theory_evaluation.utils.get_db")
def test_delete_user_performance_sqlalchemy_error(mock_get_db):
    mock_get_db.side_effect = SQLAlchemyError("Test")

    result = delete_user_performance("test@example.com", UUID("12345678-1234-5678-1234-567812345678"))
    assert result is False
2025-04-16 08:38:17,931 - INFO - Number of test case to process - 23
2025-04-16 08:38:17,931 - INFO - 

2025-04-16 08:38:17,931 - INFO - TEST CASE 1 Retry 0
2025-04-16 08:38:17,931 - INFO - ---------------
2025-04-16 08:38:17,931 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_init_db_session(mock_session_local):
    mock_engine = MagicMock()
    with patch("theory_evaluation.utils.create_engine", return_value=mock_engine):
        init_db_session()
        assert hasattr(mock_session_local, "return_value")

2025-04-16 08:38:17,932 - INFO - ---------------
2025-04-16 08:38:25,658 - INFO - Test Result 1- False
2025-04-16 08:38:25,658 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 6.65s
2025-04-16 08:38:27,359 - INFO - TEST CASE 1 Retry 1
2025-04-16 08:38:27,360 - INFO - ---------------
2025-04-16 08:38:27,360 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import MagicMock, patch

2025-04-16 08:38:27,360 - INFO - ---------------
2025-04-16 08:38:29,548 - INFO - Test Result 2- False
2025-04-16 08:38:29,548 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.99s
2025-04-16 08:38:30,294 - INFO - TEST CASE 1 Retry 2
2025-04-16 08:38:30,294 - INFO - ---------------
2025-04-16 08:38:30,295 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from theory_evaluation import models

2025-04-16 08:38:30,295 - INFO - ---------------
2025-04-16 08:38:32,600 - INFO - Test Result 3- False
2025-04-16 08:38:32,601 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 1.09s
2025-04-16 08:38:32,601 - INFO - Failed after all retries for test case 1
2025-04-16 08:38:32,601 - INFO - 

2025-04-16 08:38:32,601 - INFO - TEST CASE 2 Retry 0
2025-04-16 08:38:32,601 - INFO - ---------------
2025-04-16 08:38:32,601 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_get_db(mock_session_local):
    with get_db() as db:
        assert db == mock_session_local.return_value

2025-04-16 08:38:32,601 - INFO - ---------------
2025-04-16 08:38:34,836 - INFO - Test Result 1- False
2025-04-16 08:38:34,837 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.88s
2025-04-16 08:38:36,089 - INFO - TEST CASE 2 Retry 1
2025-04-16 08:38:36,090 - INFO - ---------------
2025-04-16 08:38:36,090 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch
import pytest

@pytest.fixture
def mock_session_local():
    with patch('your_module.SessionLocal') as mock:
        yield mock

def test_get_db(mock_session_local):
    with get_db() as db:
        assert db == mock_session_local.return_value

2025-04-16 08:38:36,091 - INFO - ---------------
2025-04-16 08:38:38,071 - INFO - Test Result 2- False
2025-04-16 08:38:38,071 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.79s
2025-04-16 08:38:38,957 - INFO - TEST CASE 2 Retry 2
2025-04-16 08:38:38,958 - INFO - ---------------
2025-04-16 08:38:38,958 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch
import pytest
from theory_evaluation import models

2025-04-16 08:38:38,959 - INFO - ---------------
2025-04-16 08:38:40,809 - INFO - Test Result 3- False
2025-04-16 08:38:40,809 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.96s
2025-04-16 08:38:40,810 - INFO - Failed after all retries for test case 2
2025-04-16 08:38:40,810 - INFO - 

2025-04-16 08:38:40,810 - INFO - TEST CASE 3 Retry 0
2025-04-16 08:38:40,810 - INFO - ---------------
2025-04-16 08:38:40,810 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_validate_user_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_user_info = MagicMock()
    mock_user_info.email = "test@example.com"
    mock_user_info.status = 1
    mock_session.query.return_value.filter.return_value.first.return_value = mock_user_info

2025-04-16 08:38:40,810 - INFO - ---------------
2025-04-16 08:38:42,560 - INFO - Test Result 1- False
2025-04-16 08:38:42,560 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.88s
2025-04-16 08:38:43,310 - INFO - TEST CASE 3 Retry 1
2025-04-16 08:38:43,310 - INFO - ---------------
2025-04-16 08:38:43,310 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import MagicMock

2025-04-16 08:38:43,311 - INFO - ---------------
2025-04-16 08:38:45,502 - INFO - Test Result 2- False
2025-04-16 08:38:45,503 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.84s
2025-04-16 08:38:46,793 - INFO - TEST CASE 3 Retry 2
2025-04-16 08:38:46,793 - INFO - ---------------
2025-04-16 08:38:46,794 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import MagicMock
import pytest
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user

2025-04-16 08:38:46,794 - INFO - ---------------
2025-04-16 08:38:49,325 - INFO - Test Result 3- False
2025-04-16 08:38:49,326 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 1.10s
2025-04-16 08:38:49,326 - INFO - Failed after all retries for test case 3
2025-04-16 08:38:49,326 - INFO - 

2025-04-16 08:38:49,326 - INFO - TEST CASE 4 Retry 0
2025-04-16 08:38:49,326 - INFO - ---------------
2025-04-16 08:38:49,326 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_validate_user_not_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_session.query.return_value.filter.return_value.first.return_value = None

2025-04-16 08:38:49,326 - INFO - ---------------
2025-04-16 08:38:51,920 - INFO - Test Result 1- False
2025-04-16 08:38:51,921 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 1.10s
2025-04-16 08:38:53,687 - INFO - TEST CASE 4 Retry 1
2025-04-16 08:38:53,688 - INFO - ---------------
2025-04-16 08:38:53,688 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch, MagicMock

2025-04-16 08:38:53,688 - INFO - ---------------
2025-04-16 08:38:55,810 - INFO - Test Result 2- False
2025-04-16 08:38:55,810 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.90s
2025-04-16 08:38:56,627 - INFO - TEST CASE 4 Retry 2
2025-04-16 08:38:56,627 - INFO - ---------------
2025-04-16 08:38:56,627 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch, MagicMock
import pytest

2025-04-16 08:38:56,627 - INFO - ---------------
2025-04-16 08:38:59,254 - INFO - Test Result 3- False
2025-04-16 08:38:59,255 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 1.35s
2025-04-16 08:38:59,255 - INFO - Failed after all retries for test case 4
2025-04-16 08:38:59,255 - INFO - 

2025-04-16 08:38:59,256 - INFO - TEST CASE 5 Retry 0
2025-04-16 08:38:59,256 - INFO - ---------------
2025-04-16 08:38:59,256 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_validate_user_operational_error(mock_get_db):
    mock_get_db.side_effect = OperationalError("Test", "Test", "Test")

2025-04-16 08:38:59,256 - INFO - ---------------
2025-04-16 08:39:01,242 - INFO - Test Result 1- False
2025-04-16 08:39:01,242 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.94s
2025-04-16 08:39:02,004 - INFO - TEST CASE 5 Retry 1
2025-04-16 08:39:02,005 - INFO - ---------------
2025-04-16 08:39:02,006 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch

2025-04-16 08:39:02,006 - INFO - ---------------
2025-04-16 08:39:03,799 - INFO - Test Result 2- False
2025-04-16 08:39:03,799 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.92s
2025-04-16 08:39:04,946 - INFO - TEST CASE 5 Retry 2
2025-04-16 08:39:04,946 - INFO - ---------------
2025-04-16 08:39:04,946 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch
import pytest
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user

2025-04-16 08:39:04,946 - INFO - ---------------
2025-04-16 08:39:06,569 - INFO - Test Result 3- False
2025-04-16 08:39:06,569 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.76s
2025-04-16 08:39:06,569 - INFO - Failed after all retries for test case 5
2025-04-16 08:39:06,570 - INFO - 

2025-04-16 08:39:06,570 - INFO - TEST CASE 6 Retry 0
2025-04-16 08:39:06,570 - INFO - ---------------
2025-04-16 08:39:06,570 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_validate_user_sqlalchemy_error(mock_get_db):
    mock_get_db.side_effect = SQLAlchemyError("Test")

2025-04-16 08:39:06,571 - INFO - ---------------
2025-04-16 08:39:08,330 - INFO - Test Result 1- False
2025-04-16 08:39:08,330 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.88s
2025-04-16 08:39:09,193 - INFO - TEST CASE 6 Retry 1
2025-04-16 08:39:09,194 - INFO - ---------------
2025-04-16 08:39:09,194 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from unittest.mock import patch
from sqlalchemy.exc import SQLAlchemyError
from theory_evaluation import models

2025-04-16 08:39:09,195 - INFO - ---------------
2025-04-16 08:39:10,916 - INFO - Test Result 2- False
2025-04-16 08:39:10,916 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.77s
2025-04-16 08:39:11,692 - INFO - TEST CASE 6 Retry 2
2025-04-16 08:39:11,692 - INFO - ---------------
2025-04-16 08:39:11,692 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from theory_evaluation import models

2025-04-16 08:39:11,693 - INFO - ---------------
2025-04-16 08:39:13,327 - INFO - Test Result 3- False
2025-04-16 08:39:13,328 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.83s
2025-04-16 08:39:13,328 - INFO - Failed after all retries for test case 6
2025-04-16 08:39:13,328 - INFO - 

2025-04-16 08:39:13,329 - INFO - TEST CASE 7 Retry 0
2025-04-16 08:39:13,329 - INFO - ---------------
2025-04-16 08:39:13,329 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_get_marking_scheme_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_curriculum = MagicMock()
    mock_curriculum.question = "What is Python?"
    mock_curriculum.marking_scheme = "Correct"
    mock_curriculum.model_answer = "Python is a programming language."
    mock_session.query.return_value.filter.return_value.first.return_value = mock_curriculum

2025-04-16 08:39:13,329 - INFO - ---------------
2025-04-16 08:39:14,775 - INFO - Test Result 1- False
2025-04-16 08:39:14,776 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.69s
2025-04-16 08:39:15,529 - INFO - TEST CASE 7 Retry 1
2025-04-16 08:39:15,529 - INFO - ---------------
2025-04-16 08:39:15,530 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from unittest.mock import MagicMock

2025-04-16 08:39:15,530 - INFO - ---------------
2025-04-16 08:39:17,518 - INFO - Test Result 2- False
2025-04-16 08:39:17,518 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.88s
2025-04-16 08:39:18,243 - INFO - TEST CASE 7 Retry 2
2025-04-16 08:39:18,243 - INFO - ---------------
2025-04-16 08:39:18,244 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from theory_evaluation import models

2025-04-16 08:39:18,244 - INFO - ---------------
2025-04-16 08:39:20,062 - INFO - Test Result 3- False
2025-04-16 08:39:20,063 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.88s
2025-04-16 08:39:20,063 - INFO - Failed after all retries for test case 7
2025-04-16 08:39:20,064 - INFO - 

2025-04-16 08:39:20,064 - INFO - TEST CASE 8 Retry 0
2025-04-16 08:39:20,064 - INFO - ---------------
2025-04-16 08:39:20,065 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_get_marking_scheme_not_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_session.query.return_value.filter.return_value.first.return_value = None

2025-04-16 08:39:20,065 - INFO - ---------------
2025-04-16 08:39:21,899 - INFO - Test Result 1- False
2025-04-16 08:39:21,899 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.85s
2025-04-16 08:39:23,549 - INFO - TEST CASE 8 Retry 1
2025-04-16 08:39:23,550 - INFO - ---------------
2025-04-16 08:39:23,550 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from unittest.mock import patch
from theory_evaluation import models

@patch('theory_evaluation.get_db')
@patch('theory_evaluation.SessionLocal')
def test_get_marking_scheme_not_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_session.query.return_value.filter.return_value.first.return_value = None
    result = get_marking_scheme(UUID('00000000-0000-0000-0000-000000000000'))
    assert result == (None, None, None)

2025-04-16 08:39:23,550 - INFO - ---------------
2025-04-16 08:39:25,480 - INFO - Test Result 2- False
2025-04-16 08:39:25,481 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.90s
2025-04-16 08:39:26,311 - INFO - TEST CASE 8 Retry 2
2025-04-16 08:39:26,311 - INFO - ---------------
2025-04-16 08:39:26,312 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from theory_evaluation.utils import get_marking_scheme

2025-04-16 08:39:26,312 - INFO - ---------------
2025-04-16 08:39:28,157 - INFO - Test Result 3- False
2025-04-16 08:39:28,158 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.91s
2025-04-16 08:39:28,159 - INFO - Failed after all retries for test case 8
2025-04-16 08:39:28,159 - INFO - 

2025-04-16 08:39:28,159 - INFO - TEST CASE 9 Retry 0
2025-04-16 08:39:28,159 - INFO - ---------------
2025-04-16 08:39:28,159 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_get_marking_scheme_operational_error(mock_get_db):
    mock_get_db.side_effect = OperationalError("Test", "Test", "Test")

2025-04-16 08:39:28,160 - INFO - ---------------
2025-04-16 08:39:30,411 - INFO - Test Result 1- False
2025-04-16 08:39:30,411 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 1.07s
2025-04-16 08:39:31,227 - INFO - TEST CASE 9 Retry 1
2025-04-16 08:39:31,228 - INFO - ---------------
2025-04-16 08:39:31,228 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch

2025-04-16 08:39:31,229 - INFO - ---------------
2025-04-16 08:39:33,173 - INFO - Test Result 2- False
2025-04-16 08:39:33,174 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.84s
2025-04-16 08:39:33,971 - INFO - TEST CASE 9 Retry 2
2025-04-16 08:39:33,972 - INFO - ---------------
2025-04-16 08:39:33,972 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch
import pytest

2025-04-16 08:39:33,972 - INFO - ---------------
2025-04-16 08:39:35,904 - INFO - Test Result 3- False
2025-04-16 08:39:35,904 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 1.02s
2025-04-16 08:39:35,905 - INFO - Failed after all retries for test case 9
2025-04-16 08:39:35,905 - INFO - 

2025-04-16 08:39:35,905 - INFO - TEST CASE 10 Retry 0
2025-04-16 08:39:35,905 - INFO - ---------------
2025-04-16 08:39:35,906 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_get_marking_scheme_sqlalchemy_error(mock_get_db):
    mock_get_db.side_effect = SQLAlchemyError("Test")

2025-04-16 08:39:35,906 - INFO - ---------------
2025-04-16 08:39:37,858 - INFO - Test Result 1- False
2025-04-16 08:39:37,858 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.79s
2025-04-16 08:39:39,392 - INFO - TEST CASE 10 Retry 1
2025-04-16 08:39:39,392 - INFO - ---------------
2025-04-16 08:39:39,393 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from sqlalchemy.exc import SQLAlchemyError
from unittest.mock import patch
from theory_evaluation import get_marking_scheme

@patch('theory_evaluation.get_db')
def test_get_marking_scheme_sqlalchemy_error(mock_get_db):
    mock_get_db.side_effect = SQLAlchemyError("Test")
    result = get_marking_scheme(UUID('12345678-1234-5678-1234-567812345678'))
    assert result == (None, None, None)

2025-04-16 08:39:39,393 - INFO - ---------------
2025-04-16 08:39:41,012 - INFO - Test Result 2- False
2025-04-16 08:39:41,012 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.72s
2025-04-16 08:39:42,354 - INFO - TEST CASE 10 Retry 2
2025-04-16 08:39:42,355 - INFO - ---------------
2025-04-16 08:39:42,355 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch
from uuid import UUID
from theory_evaluation import get_marking_scheme

2025-04-16 08:39:42,355 - INFO - ---------------
2025-04-16 08:39:43,992 - INFO - Test Result 3- False
2025-04-16 08:39:43,993 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.78s
2025-04-16 08:39:43,993 - INFO - Failed after all retries for test case 10
2025-04-16 08:39:43,993 - INFO - 

2025-04-16 08:39:43,993 - INFO - TEST CASE 11 Retry 0
2025-04-16 08:39:43,993 - INFO - ---------------
2025-04-16 08:39:43,993 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_get_user_performance_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_performance = MagicMock()
    mock_performance.user_attempts = 1
    mock_performance.llm_evaluation = "Good"
    mock_performance.user_grade = "Pass"
    mock_performance.llm_evaluation_status = 2
    mock_session.query.return_value.filter.return_value.order_by.return_value.first.return_value = mock_performance

2025-04-16 08:39:43,993 - INFO - ---------------
2025-04-16 08:39:45,744 - INFO - Test Result 1- False
2025-04-16 08:39:45,744 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.71s
2025-04-16 08:39:46,465 - INFO - TEST CASE 11 Retry 1
2025-04-16 08:39:46,466 - INFO - ---------------
2025-04-16 08:39:46,466 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import MagicMock
import pytest

2025-04-16 08:39:46,466 - INFO - ---------------
2025-04-16 08:39:48,300 - INFO - Test Result 2- False
2025-04-16 08:39:48,300 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.88s
2025-04-16 08:39:49,063 - INFO - TEST CASE 11 Retry 2
2025-04-16 08:39:49,064 - INFO - ---------------
2025-04-16 08:39:49,064 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import MagicMock

2025-04-16 08:39:49,064 - INFO - ---------------
2025-04-16 08:39:51,081 - INFO - Test Result 3- False
2025-04-16 08:39:51,082 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.87s
2025-04-16 08:39:51,082 - INFO - Failed after all retries for test case 11
2025-04-16 08:39:51,082 - INFO - 

2025-04-16 08:39:51,083 - INFO - TEST CASE 12 Retry 0
2025-04-16 08:39:51,083 - INFO - ---------------
2025-04-16 08:39:51,083 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_get_user_performance_not_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_session.query.return_value.filter.return_value.order_by.return_value.first.return_value = None

2025-04-16 08:39:51,083 - INFO - ---------------
2025-04-16 08:39:53,071 - INFO - Test Result 1- False
2025-04-16 08:39:53,071 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.84s
2025-04-16 08:39:53,917 - INFO - TEST CASE 12 Retry 1
2025-04-16 08:39:53,918 - INFO - ---------------
2025-04-16 08:39:53,918 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from unittest.mock import patch

2025-04-16 08:39:53,918 - INFO - ---------------
2025-04-16 08:39:55,497 - INFO - Test Result 2- False
2025-04-16 08:39:55,498 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.75s
2025-04-16 08:39:56,358 - INFO - TEST CASE 12 Retry 2
2025-04-16 08:39:56,358 - INFO - ---------------
2025-04-16 08:39:56,358 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user

2025-04-16 08:39:56,358 - INFO - ---------------
2025-04-16 08:39:58,093 - INFO - Test Result 3- False
2025-04-16 08:39:58,093 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.90s
2025-04-16 08:39:58,094 - INFO - Failed after all retries for test case 12
2025-04-16 08:39:58,094 - INFO - 

2025-04-16 08:39:58,094 - INFO - TEST CASE 13 Retry 0
2025-04-16 08:39:58,094 - INFO - ---------------
2025-04-16 08:39:58,094 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_get_user_performance_operational_error(mock_get_db):
    mock_get_db.side_effect = OperationalError("Test", "Test", "Test")

2025-04-16 08:39:58,095 - INFO - ---------------
2025-04-16 08:39:59,683 - INFO - Test Result 1- False
2025-04-16 08:39:59,684 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.73s
2025-04-16 08:40:01,904 - INFO - TEST CASE 13 Retry 1
2025-04-16 08:40:01,904 - INFO - ---------------
2025-04-16 08:40:01,904 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch
import pytest
from sqlalchemy.exc import OperationalError
from theory_evaluation import models

@pytest.fixture
def mock_get_db():
    with patch('theory_evaluation.utils.get_db') as mock:
        yield mock

def test_get_user_performance_operational_error(mock_get_db):
    mock_get_db.side_effect = OperationalError("Test", "Test", "Test")
    from theory_evaluation.utils import get_user_performance
    result = get_user_performance("test@example.com", UUID("12345678-1234-5678-1234-567812345678"))
    assert result == (0, "An unexpected error occurred. Please try again.", "No grade available.", 0)

2025-04-16 08:40:01,904 - INFO - ---------------
2025-04-16 08:40:03,837 - INFO - Test Result 2- False
2025-04-16 08:40:03,837 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.96s
2025-04-16 08:40:04,871 - INFO - TEST CASE 13 Retry 2
2025-04-16 08:40:04,871 - INFO - ---------------
2025-04-16 08:40:04,872 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch
from theory_evaluation.utils import get_user_performance
from uuid import UUID

2025-04-16 08:40:04,872 - INFO - ---------------
2025-04-16 08:40:06,465 - INFO - Test Result 3- False
2025-04-16 08:40:06,466 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.66s
2025-04-16 08:40:06,466 - INFO - Failed after all retries for test case 13
2025-04-16 08:40:06,466 - INFO - 

2025-04-16 08:40:06,467 - INFO - TEST CASE 14 Retry 0
2025-04-16 08:40:06,467 - INFO - ---------------
2025-04-16 08:40:06,467 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_get_user_performance_sqlalchemy_error(mock_get_db):
    mock_get_db.side_effect = SQLAlchemyError("Test")

2025-04-16 08:40:06,467 - INFO - ---------------
2025-04-16 08:40:08,878 - INFO - Test Result 1- False
2025-04-16 08:40:08,879 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 1.30s
2025-04-16 08:40:11,769 - INFO - TEST CASE 14 Retry 1
2025-04-16 08:40:11,770 - INFO - ---------------
2025-04-16 08:40:11,770 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from unittest.mock import patch
from sqlalchemy.exc import SQLAlchemyError

@patch('theory_evaluation.get_db')
def test_get_user_performance_sqlalchemy_error(mock_get_db):
    mock_get_db.side_effect = SQLAlchemyError("Test")
    from theory_evaluation import get_user_performance
    result = get_user_performance("test@example.com", UUID("12345678-1234-5678-1234-567812345678"))
    assert result == (0, "An unexpected error occurred. Please try again.", "No grade available.", 0)

2025-04-16 08:40:11,771 - INFO - ---------------
2025-04-16 08:40:13,623 - INFO - Test Result 2- False
2025-04-16 08:40:13,623 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.87s
2025-04-16 08:40:14,627 - INFO - TEST CASE 14 Retry 2
2025-04-16 08:40:14,628 - INFO - ---------------
2025-04-16 08:40:14,629 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch
from sqlalchemy.exc import SQLAlchemyError
from uuid import UUID
import pytest

2025-04-16 08:40:14,629 - INFO - ---------------
2025-04-16 08:40:16,433 - INFO - Test Result 3- False
2025-04-16 08:40:16,433 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.81s
2025-04-16 08:40:16,433 - INFO - Failed after all retries for test case 14
2025-04-16 08:40:16,433 - INFO - 

2025-04-16 08:40:16,433 - INFO - TEST CASE 15 Retry 0
2025-04-16 08:40:16,433 - INFO - ---------------
2025-04-16 08:40:16,433 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_manage_user_performance_create_attempt(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_user_performance = MagicMock()
    mock_user_performance.user_attempts = 2
    mock_user_performance.llm_evaluation = None
    mock_session.query.return_value.filter.return_value.order_by.return_value.first.return_value = mock_user_performance

2025-04-16 08:40:16,433 - INFO - ---------------
2025-04-16 08:40:17,904 - INFO - Test Result 1- False
2025-04-16 08:40:17,904 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.68s
2025-04-16 08:40:18,797 - INFO - TEST CASE 15 Retry 1
2025-04-16 08:40:18,798 - INFO - ---------------
2025-04-16 08:40:18,798 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from unittest.mock import MagicMock, patch
from theory_evaluation import models

2025-04-16 08:40:18,798 - INFO - ---------------
2025-04-16 08:40:20,283 - INFO - Test Result 2- False
2025-04-16 08:40:20,283 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.68s
2025-04-16 08:40:21,264 - INFO - TEST CASE 15 Retry 2
2025-04-16 08:40:21,264 - INFO - ---------------
2025-04-16 08:40:21,264 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user

2025-04-16 08:40:21,265 - INFO - ---------------
2025-04-16 08:40:22,941 - INFO - Test Result 3- False
2025-04-16 08:40:22,942 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.80s
2025-04-16 08:40:22,943 - INFO - Failed after all retries for test case 15
2025-04-16 08:40:22,943 - INFO - 

2025-04-16 08:40:22,944 - INFO - TEST CASE 16 Retry 0
2025-04-16 08:40:22,944 - INFO - ---------------
2025-04-16 08:40:22,945 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_manage_user_performance_update_performance(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_user_performance = MagicMock()
    mock_session.query.return_value.filter.return_value.order_by.return_value.first.return_value = mock_user_performance

2025-04-16 08:40:22,945 - INFO - ---------------
2025-04-16 08:40:24,611 - INFO - Test Result 1- False
2025-04-16 08:40:24,612 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.67s
2025-04-16 08:40:26,067 - INFO - TEST CASE 16 Retry 1
2025-04-16 08:40:26,068 - INFO - ---------------
2025-04-16 08:40:26,069 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from unittest.mock import MagicMock

def test_manage_user_performance_update_performance(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_user_performance = MagicMock()
    mock_session.query.return_value.filter.return_value.order_by.return_value.first.return_value = mock_user_performance

2025-04-16 08:40:26,070 - INFO - ---------------
2025-04-16 08:40:28,552 - INFO - Test Result 2- False
2025-04-16 08:40:28,552 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.91s
2025-04-16 08:40:30,120 - INFO - TEST CASE 16 Retry 2
2025-04-16 08:40:30,120 - INFO - ---------------
2025-04-16 08:40:30,120 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch, MagicMock

@patch('theory_evaluation.get_db')
def test_manage_user_performance_update_performance(mock_get_db):
    mock_session = MagicMock()
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_user_performance = MagicMock()
    mock_session.query.return_value.filter.return_value.order_by.return_value.first.return_value = mock_user_performance

2025-04-16 08:40:30,120 - INFO - ---------------
2025-04-16 08:40:32,507 - INFO - Test Result 3- False
2025-04-16 08:40:32,508 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.97s
2025-04-16 08:40:32,509 - INFO - Failed after all retries for test case 16
2025-04-16 08:40:32,509 - INFO - 

2025-04-16 08:40:32,509 - INFO - TEST CASE 17 Retry 0
2025-04-16 08:40:32,509 - INFO - ---------------
2025-04-16 08:40:32,509 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_manage_user_performance_decrement_attempts(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_user_performance = MagicMock()
    mock_user_performance.user_attempts = 1
    mock_session.query.return_value.filter.return_value.order_by.return_value.first.return_value = mock_user_performance

2025-04-16 08:40:32,510 - INFO - ---------------
2025-04-16 08:40:35,182 - INFO - Test Result 1- False
2025-04-16 08:40:35,183 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.87s
2025-04-16 08:40:36,964 - INFO - TEST CASE 17 Retry 1
2025-04-16 08:40:36,964 - INFO - ---------------
2025-04-16 08:40:36,964 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import MagicMock

2025-04-16 08:40:36,964 - INFO - ---------------
2025-04-16 08:40:38,951 - INFO - Test Result 2- False
2025-04-16 08:40:38,952 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.89s
2025-04-16 08:40:39,743 - INFO - TEST CASE 17 Retry 2
2025-04-16 08:40:39,743 - INFO - ---------------
2025-04-16 08:40:39,744 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import MagicMock
import pytest

2025-04-16 08:40:39,744 - INFO - ---------------
2025-04-16 08:40:41,412 - INFO - Test Result 3- False
2025-04-16 08:40:41,412 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.62s
2025-04-16 08:40:41,412 - INFO - Failed after all retries for test case 17
2025-04-16 08:40:41,412 - INFO - 

2025-04-16 08:40:41,412 - INFO - TEST CASE 18 Retry 0
2025-04-16 08:40:41,413 - INFO - ---------------
2025-04-16 08:40:41,413 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_manage_user_performance_operational_error(mock_get_db):
    mock_get_db.side_effect = OperationalError("Test", "Test", "Test")

2025-04-16 08:40:41,413 - INFO - ---------------
2025-04-16 08:40:42,860 - INFO - Test Result 1- False
2025-04-16 08:40:42,860 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.71s
2025-04-16 08:40:44,782 - INFO - TEST CASE 18 Retry 1
2025-04-16 08:40:44,782 - INFO - ---------------
2025-04-16 08:40:44,783 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from unittest.mock import patch
from sqlalchemy.exc import OperationalError
from theory_evaluation import models
from theory_evaluation.utils import manage_user_performance

@patch('theory_evaluation.utils.get_db')
def test_manage_user_performance_operational_error(mock_get_db):
    mock_get_db.side_effect = OperationalError("Test", "Test", "Test")
    result = manage_user_performance(0, "test@example.com", UUID("12345678-1234-5678-1234-567812345678"))
    assert result is False

2025-04-16 08:40:44,783 - INFO - ---------------
2025-04-16 08:40:46,941 - INFO - Test Result 2- False
2025-04-16 08:40:46,942 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.94s
2025-04-16 08:40:47,682 - INFO - TEST CASE 18 Retry 2
2025-04-16 08:40:47,682 - INFO - ---------------
2025-04-16 08:40:47,682 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch

2025-04-16 08:40:47,683 - INFO - ---------------
2025-04-16 08:40:49,233 - INFO - Test Result 3- False
2025-04-16 08:40:49,233 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.63s
2025-04-16 08:40:49,233 - INFO - Failed after all retries for test case 18
2025-04-16 08:40:49,233 - INFO - 

2025-04-16 08:40:49,234 - INFO - TEST CASE 19 Retry 0
2025-04-16 08:40:49,234 - INFO - ---------------
2025-04-16 08:40:49,234 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_manage_user_performance_sqlalchemy_error(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_session.commit.side_effect = SQLAlchemyError("Test")

2025-04-16 08:40:49,234 - INFO - ---------------
2025-04-16 08:40:51,501 - INFO - Test Result 1- False
2025-04-16 08:40:51,501 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.99s
2025-04-16 08:40:53,251 - INFO - TEST CASE 19 Retry 1
2025-04-16 08:40:53,252 - INFO - ---------------
2025-04-16 08:40:53,252 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from unittest.mock import patch
from sqlalchemy.exc import SQLAlchemyError
from theory_evaluation import manage_user_performance

@patch('theory_evaluation.get_db')
@patch('theory_evaluation.SessionLocal')
def test_manage_user_performance_sqlalchemy_error(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_session.commit.side_effect = SQLAlchemyError("Test")
    result = manage_user_performance(0, "test@example.com", UUID("12345678123456781234567812345678"))
    assert result is False

2025-04-16 08:40:53,252 - INFO - ---------------
2025-04-16 08:40:54,644 - INFO - Test Result 2- False
2025-04-16 08:40:54,644 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.62s
2025-04-16 08:40:55,692 - INFO - TEST CASE 19 Retry 2
2025-04-16 08:40:55,692 - INFO - ---------------
2025-04-16 08:40:55,692 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch
from sqlalchemy.exc import SQLAlchemyError
from uuid import UUID
from theory_evaluation import manage_user_performance

2025-04-16 08:40:55,693 - INFO - ---------------
2025-04-16 08:40:57,433 - INFO - Test Result 3- False
2025-04-16 08:40:57,433 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.83s
2025-04-16 08:40:57,433 - INFO - Failed after all retries for test case 19
2025-04-16 08:40:57,433 - INFO - 

2025-04-16 08:40:57,434 - INFO - TEST CASE 20 Retry 0
2025-04-16 08:40:57,434 - INFO - ---------------
2025-04-16 08:40:57,434 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_delete_user_performance_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_user_performance = [MagicMock(), MagicMock()]
    mock_session.query.return_value.filter.return_value.all.return_value = mock_user_performance

2025-04-16 08:40:57,434 - INFO - ---------------
2025-04-16 08:40:59,430 - INFO - Test Result 1- False
2025-04-16 08:40:59,430 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 1.03s
2025-04-16 08:41:01,701 - INFO - TEST CASE 20 Retry 1
2025-04-16 08:41:01,701 - INFO - ---------------
2025-04-16 08:41:01,702 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from unittest.mock import MagicMock, patch
from theory_evaluation import models

@patch('theory_evaluation.get_db')
def test_delete_user_performance_exists(mock_get_db):
    mock_session = MagicMock()
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_user_performance = [MagicMock(), MagicMock()]
    mock_session.query.return_value.filter.return_value.all.return_value = mock_user_performance
    result = delete_user_performance('test@example.com', UUID('00000000-0000-0000-0000-000000000000'))
    assert result is True
    assert mock_session.delete.call_count == len(mock_user_performance)
    mock_session.commit.assert_called_once()

2025-04-16 08:41:01,702 - INFO - ---------------
2025-04-16 08:41:03,571 - INFO - Test Result 2- False
2025-04-16 08:41:03,572 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.86s
2025-04-16 08:41:04,230 - INFO - TEST CASE 20 Retry 2
2025-04-16 08:41:04,231 - INFO - ---------------
2025-04-16 08:41:04,231 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from theory_evaluation.utils import delete_user_performance

2025-04-16 08:41:04,232 - INFO - ---------------
2025-04-16 08:41:05,724 - INFO - Test Result 3- False
2025-04-16 08:41:05,724 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.70s
2025-04-16 08:41:05,724 - INFO - Failed after all retries for test case 20
2025-04-16 08:41:05,725 - INFO - 

2025-04-16 08:41:05,725 - INFO - TEST CASE 21 Retry 0
2025-04-16 08:41:05,725 - INFO - ---------------
2025-04-16 08:41:05,725 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_delete_user_performance_not_exists(mock_get_db, mock_session):
    mock_get_db.return_value.__enter__.return_value = mock_session
    mock_session.query.return_value.filter.return_value.all.return_value = []

2025-04-16 08:41:05,725 - INFO - ---------------
2025-04-16 08:41:07,388 - INFO - Test Result 1- False
2025-04-16 08:41:07,389 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.74s
2025-04-16 08:41:09,168 - INFO - TEST CASE 21 Retry 1
2025-04-16 08:41:09,168 - INFO - ---------------
2025-04-16 08:41:09,169 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch
from theory_evaluation import models
import pytest

@patch('theory_evaluation.get_db')
def test_delete_user_performance_not_exists(mock_get_db):
    mock_session = mock_get_db.return_value.__enter__.return_value
    mock_session.query.return_value.filter.return_value.all.return_value = []
    result = delete_user_performance('test@example.com', UUID('00000000-0000-0000-0000-000000000000'))
    assert result is False

2025-04-16 08:41:09,169 - INFO - ---------------
2025-04-16 08:41:10,978 - INFO - Test Result 2- False
2025-04-16 08:41:10,979 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.74s
2025-04-16 08:41:11,833 - INFO - TEST CASE 21 Retry 2
2025-04-16 08:41:11,833 - INFO - ---------------
2025-04-16 08:41:11,834 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch
from theory_evaluation.utils import delete_user_performance

2025-04-16 08:41:11,834 - INFO - ---------------
2025-04-16 08:41:13,339 - INFO - Test Result 3- False
2025-04-16 08:41:13,340 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.73s
2025-04-16 08:41:13,340 - INFO - Failed after all retries for test case 21
2025-04-16 08:41:13,340 - INFO - 

2025-04-16 08:41:13,340 - INFO - TEST CASE 22 Retry 0
2025-04-16 08:41:13,340 - INFO - ---------------
2025-04-16 08:41:13,340 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_delete_user_performance_operational_error(mock_get_db):
    mock_get_db.side_effect = OperationalError("Test", "Test", "Test")

2025-04-16 08:41:13,340 - INFO - ---------------
2025-04-16 08:41:14,877 - INFO - Test Result 1- False
2025-04-16 08:41:14,877 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.85s
2025-04-16 08:41:17,483 - INFO - TEST CASE 22 Retry 1
2025-04-16 08:41:17,483 - INFO - ---------------
2025-04-16 08:41:17,484 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from unittest.mock import patch
from sqlalchemy.exc import OperationalError
from theory_evaluation.utils import delete_user_performance

@patch('theory_evaluation.utils.get_db')
def test_delete_user_performance_operational_error(mock_get_db):
    mock_get_db.side_effect = OperationalError("Test", "Test", "Test")
    result = delete_user_performance("test@example.com", UUID("00000000-0000-0000-0000-000000000000"))
    assert result is False

2025-04-16 08:41:17,484 - INFO - ---------------
2025-04-16 08:41:19,001 - INFO - Test Result 2- False
2025-04-16 08:41:19,001 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.73s
2025-04-16 08:41:21,296 - INFO - TEST CASE 22 Retry 2
2025-04-16 08:41:21,297 - INFO - ---------------
2025-04-16 08:41:21,298 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from unittest.mock import patch

2025-04-16 08:41:21,299 - INFO - ---------------
2025-04-16 08:41:24,010 - INFO - Test Result 3- False
2025-04-16 08:41:24,011 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 1.38s
2025-04-16 08:41:24,011 - INFO - Failed after all retries for test case 22
2025-04-16 08:41:24,011 - INFO - 

2025-04-16 08:41:24,011 - INFO - TEST CASE 23 Retry 0
2025-04-16 08:41:24,011 - INFO - ---------------
2025-04-16 08:41:24,011 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

def test_delete_user_performance_sqlalchemy_error(mock_get_db):
    mock_get_db.side_effect = SQLAlchemyError("Test")

2025-04-16 08:41:24,011 - INFO - ---------------
2025-04-16 08:41:25,617 - INFO - Test Result 1- False
2025-04-16 08:41:25,618 - INFO - Test Error 1 - c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.64s
2025-04-16 08:41:26,471 - INFO - TEST CASE 23 Retry 1
2025-04-16 08:41:26,472 - INFO - ---------------
2025-04-16 08:41:26,472 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
import pytest
from sqlalchemy.exc import SQLAlchemyError

2025-04-16 08:41:26,472 - INFO - ---------------
2025-04-16 08:41:27,878 - INFO - Test Result 2- False
2025-04-16 08:41:27,878 - INFO - Test Error 2 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.60s
2025-04-16 08:41:28,704 - INFO - TEST CASE 23 Retry 2
2025-04-16 08:41:28,704 - INFO - ---------------
2025-04-16 08:41:28,705 - INFO - 
import os
import time
import pydantic
from uuid import UUID
from sqlalchemy import create_engine, and_, desc
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError, OperationalError
from contextlib import contextmanager
from theory_evaluation import models
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user
import pytest
@pytest.fixture
def mock_session():
    session = MagicMock()
    return session

# New Test Case
from theory_evaluation.utils import delete_user_performance, get_db, get_marking_scheme, get_user_performance, init_db_session, manage_user_performance, validate_user

2025-04-16 08:41:28,705 - INFO - ---------------
2025-04-16 08:41:30,098 - INFO - Test Result 3- False
2025-04-16 08:41:30,098 - INFO - Test Error 3 - 
c:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\.venv\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== ERRORS ====================================
________________________ ERROR collecting temp/temp.py ________________________
ImportError while importing test module 'C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\temp\temp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
temp\temp.py:9: in <module>
    from theory_evaluation import models
E   ImportError: cannot import name 'models' from 'theory_evaluation' (C:\ChenKhoon\JupyterNotebook\GenerateUnitTestCases\theory_evaluation\__init__.py)
=========================== short test summary info ===========================
ERROR temp/temp.py
!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1 error in 0.62s
2025-04-16 08:41:30,099 - INFO - Failed after all retries for test case 23
2025-04-16 08:41:30,099 - INFO - run_each_pytest_function_individually complete
2025-04-16 08:41:30,101 - INFO - End Processing file: theory_evaluation\utils.py

2025-04-16 08:41:30,102 - INFO - 
Start Processing file: theory_evaluation\__init__.py
2025-04-16 08:41:30,103 - INFO - Extraction of function and class start
2025-04-16 08:41:30,103 - INFO - extraction of function and class complete
2025-04-16 08:41:30,104 - WARNING - No public functions found in theory_evaluation\__init__.py. Skipping test generation.

