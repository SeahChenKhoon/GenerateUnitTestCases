2025-04-16 15:49:56,459 - INFO - Loading environment variables start
2025-04-16 15:49:56,462 - INFO - Loading environment variables completes
2025-04-16 15:49:56,463 - INFO - Initialising of LLM start
2025-04-16 15:49:56,789 - INFO - Initialising of LLM completes
2025-04-16 15:49:56,790 - INFO - Getting python file starts
2025-04-16 15:49:56,790 - INFO - Getting python file completes
2025-04-16 15:49:56,790 - INFO - 
Start Processing file: theory_evaluation\llm_utils.py
2025-04-16 15:49:56,790 - INFO - Extraction of function and class start
2025-04-16 15:49:56,791 - INFO - extraction of function and class complete
2025-04-16 15:49:56,791 - INFO - Generate Unit Test Case starts
2025-04-16 15:49:56,791 - INFO - Extract unique import start
2025-04-16 15:49:58,559 - INFO - Extract unique import complete
2025-04-16 15:49:58,559 - INFO - Update relative import start
2025-04-16 15:49:58,560 - INFO - Update relative import complete
2025-04-16 15:50:09,110 - WARNING - Stripped Markdown-style triple backtick fences from LLM output.
2025-04-16 15:50:09,111 - INFO - Generate Unit Test Case complete
2025-04-16 15:50:09,118 - INFO - run_each_pytest_function_individually start
2025-04-16 15:50:15,151 - INFO - Number of test case to process - 5
2025-04-16 15:50:15,152 - INFO - 

2025-04-16 15:50:15,152 - INFO - TEST CASE 1 Retry 0
2025-04-16 15:50:15,153 - INFO - ---------------
2025-04-16 15:50:15,154 - INFO - 
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest


def test_initialise_prompt_success():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$key} prompt."
    expected_prompt = "This is a value prompt."

2025-04-16 15:50:15,155 - INFO - ---------------
2025-04-16 15:50:16,001 - INFO - TEST CASE 1 Retry 0 - Result - Passed
2025-04-16 15:50:16,002 - INFO - Success_test_cases - import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest

def test_initialise_prompt_success():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$key} prompt."
    expected_prompt = "This is a value prompt."

2025-04-16 15:50:16,002 - INFO - Test Case 1 processed successfully
2025-04-16 15:50:16,002 - INFO - 

2025-04-16 15:50:16,002 - INFO - TEST CASE 2 Retry 0
2025-04-16 15:50:16,002 - INFO - ---------------
2025-04-16 15:50:16,002 - INFO - 
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest


def test_initialise_prompt_missing_placeholder():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$missing_key} prompt."
    expected_prompt = "This is a {$missing_key} prompt."

2025-04-16 15:50:16,002 - INFO - ---------------
2025-04-16 15:50:16,979 - INFO - TEST CASE 2 Retry 0 - Result - Passed
2025-04-16 15:50:16,980 - INFO - Success_test_cases - import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest

def test_initialise_prompt_success():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$key} prompt."
    expected_prompt = "This is a value prompt."

def test_initialise_prompt_missing_placeholder():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$missing_key} prompt."
    expected_prompt = "This is a {$missing_key} prompt."

2025-04-16 15:50:16,980 - INFO - Test Case 2 processed successfully
2025-04-16 15:50:16,980 - INFO - 

2025-04-16 15:50:16,980 - INFO - TEST CASE 3 Retry 0
2025-04-16 15:50:16,980 - INFO - ---------------
2025-04-16 15:50:16,980 - INFO - 
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest


def test_initialise_prompt_exception():
    agent = "test_agent"

2025-04-16 15:50:16,980 - INFO - ---------------
2025-04-16 15:50:18,289 - INFO - TEST CASE 3 Retry 0 - Result - Passed
2025-04-16 15:50:18,289 - INFO - Success_test_cases - import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest

def test_initialise_prompt_success():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$key} prompt."
    expected_prompt = "This is a value prompt."

def test_initialise_prompt_missing_placeholder():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$missing_key} prompt."
    expected_prompt = "This is a {$missing_key} prompt."

def test_initialise_prompt_exception():
    agent = "test_agent"

2025-04-16 15:50:18,290 - INFO - Test Case 3 processed successfully
2025-04-16 15:50:18,290 - INFO - 

2025-04-16 15:50:18,290 - INFO - TEST CASE 4 Retry 0
2025-04-16 15:50:18,290 - INFO - ---------------
2025-04-16 15:50:18,290 - INFO - 
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest


def test_initialise_settings_success():
    agent = "test_agent"
    settings_yaml = "setting_key: setting_value"
    expected_settings = {"setting_key": "setting_value"}

2025-04-16 15:50:18,290 - INFO - ---------------
2025-04-16 15:50:19,105 - INFO - TEST CASE 4 Retry 0 - Result - Passed
2025-04-16 15:50:19,105 - INFO - Success_test_cases - import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest

def test_initialise_prompt_success():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$key} prompt."
    expected_prompt = "This is a value prompt."

def test_initialise_prompt_missing_placeholder():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$missing_key} prompt."
    expected_prompt = "This is a {$missing_key} prompt."

def test_initialise_prompt_exception():
    agent = "test_agent"

def test_initialise_settings_success():
    agent = "test_agent"
    settings_yaml = "setting_key: setting_value"
    expected_settings = {"setting_key": "setting_value"}

2025-04-16 15:50:19,106 - INFO - Test Case 4 processed successfully
2025-04-16 15:50:19,106 - INFO - 

2025-04-16 15:50:19,106 - INFO - TEST CASE 5 Retry 0
2025-04-16 15:50:19,106 - INFO - ---------------
2025-04-16 15:50:19,106 - INFO - 
import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest


def test_initialise_settings_exception():
    agent = "test_agent"

2025-04-16 15:50:19,106 - INFO - ---------------
2025-04-16 15:50:19,830 - INFO - TEST CASE 5 Retry 0 - Result - Passed
2025-04-16 15:50:19,830 - INFO - Success_test_cases - import os
import re
import yaml
from theory_evaluation.llm_utils import initialise_prompt, initialise_settings
import pytest

def test_initialise_prompt_success():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$key} prompt."
    expected_prompt = "This is a value prompt."

def test_initialise_prompt_missing_placeholder():
    agent = "test_agent"
    config_yaml = "key: value"
    prompt_txt = "This is a {$missing_key} prompt."
    expected_prompt = "This is a {$missing_key} prompt."

def test_initialise_prompt_exception():
    agent = "test_agent"

def test_initialise_settings_success():
    agent = "test_agent"
    settings_yaml = "setting_key: setting_value"
    expected_settings = {"setting_key": "setting_value"}

def test_initialise_settings_exception():
    agent = "test_agent"

2025-04-16 15:50:19,830 - INFO - Test Case 5 processed successfully
2025-04-16 15:50:19,830 - INFO - run_each_pytest_function_individually complete
2025-04-16 15:50:19,831 - INFO - End Processing file: theory_evaluation\llm_utils.py

