2025-04-15 15:31:31,172 - INFO - Loading environment variables...
2025-04-15 15:31:31,482 - INFO - Start Processing file: theory_evaluation\llm_handler.py
2025-04-15 15:31:31,483 - INFO - Hello World
2025-04-15 15:31:31,483 - INFO - []
2025-04-15 15:31:33,219 - INFO - function_names - ['_OpenAI_Chat_Completion', '_OpenAI_JSON_Completion', '_OpenAI_Streaming', '__init__', '_run', 'execute', 'main']
2025-04-15 15:31:53,360 - INFO - 

2025-04-15 15:31:53,361 - INFO - TEST CASE 1 Retry 0
2025-04-15 15:31:53,362 - INFO - ---------------
2025-04-15 15:31:53,362 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest


async def test_openai_llm_initialization():
    with patch("theory_evaluation.llm_handler.AzureOpenAI") as mock_azure_openai, \
         patch("theory_evaluation.llm_handler.OpenAI") as mock_openai, \
         patch("theory_evaluation.llm_handler.os.getenv", side_effect=lambda key: f"mock_{key}"):
        
        llm = OpenAI_llm(useAzureOpenAI=True, message="Test message")
        assert llm.message == "Test message"
        assert llm.client == mock_azure_openai.return_value
        assert llm.model_name == "mock_AZURE_OPENAI_DEPLOYMENT_NAME"

2025-04-15 15:31:53,366 - INFO - ---------------
2025-04-15 15:31:55,706 - INFO - Test Result 1- True
2025-04-15 15:31:55,707 - INFO - Test Error 1 - C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
s                                                                        [100%]
============================== warnings summary ===============================
temp/temp.py::test_openai_llm_initialization
  C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\_pytest\python.py:148: PytestUnhandledCoroutineWarning: async def functions are not natively supported and have been skipped.
  You need to install a suitable plugin for your async framework, for example:
    - anyio
    - pytest-asyncio
    - pytest-tornasync
    - pytest-trio
    - pytest-twisted
    warnings.warn(PytestUnhandledCoroutineWarning(msg.format(nodeid)))

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
1 skipped, 1 warning in 1.36s
2025-04-15 15:31:55,707 - INFO - 

2025-04-15 15:31:55,708 - INFO - TEST CASE 2 Retry 0
2025-04-15 15:31:55,708 - INFO - ---------------
2025-04-15 15:31:55,709 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest


async def test_openai_json_completion():
    with patch("theory_evaluation.llm_handler.OpenAI_llm.client") as mock_client:
        mock_response = AsyncMock()
        mock_response.choices[0].message.content = json.dumps({"answer": "42", "explanation": "The answer to life"})
        mock_client.chat.completions.create.return_value = mock_response

2025-04-15 15:31:55,709 - INFO - ---------------
2025-04-15 15:31:58,159 - INFO - Test Result 1- True
2025-04-15 15:31:58,159 - INFO - Test Error 1 - C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
s                                                                        [100%]
============================== warnings summary ===============================
temp/temp.py::test_openai_json_completion
  C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\_pytest\python.py:148: PytestUnhandledCoroutineWarning: async def functions are not natively supported and have been skipped.
  You need to install a suitable plugin for your async framework, for example:
    - anyio
    - pytest-asyncio
    - pytest-tornasync
    - pytest-trio
    - pytest-twisted
    warnings.warn(PytestUnhandledCoroutineWarning(msg.format(nodeid)))

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
1 skipped, 1 warning in 1.50s
2025-04-15 15:31:58,161 - INFO - 

2025-04-15 15:31:58,161 - INFO - TEST CASE 3 Retry 0
2025-04-15 15:31:58,162 - INFO - ---------------
2025-04-15 15:31:58,162 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest


async def test_openai_streaming():
    with patch("theory_evaluation.llm_handler.OpenAI_llm.client") as mock_client:
        mock_stream = AsyncMock()
        mock_chunk = AsyncMock()
        mock_chunk.choices[0].delta.content = "streaming content"
        mock_stream.__aiter__.return_value = [mock_chunk]
        mock_client.chat.completions.create.return_value = mock_stream

2025-04-15 15:31:58,162 - INFO - ---------------
2025-04-15 15:32:00,838 - INFO - Test Result 1- True
2025-04-15 15:32:00,839 - INFO - Test Error 1 - C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
s                                                                        [100%]
============================== warnings summary ===============================
temp/temp.py::test_openai_streaming
  C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\_pytest\python.py:148: PytestUnhandledCoroutineWarning: async def functions are not natively supported and have been skipped.
  You need to install a suitable plugin for your async framework, for example:
    - anyio
    - pytest-asyncio
    - pytest-tornasync
    - pytest-trio
    - pytest-twisted
    warnings.warn(PytestUnhandledCoroutineWarning(msg.format(nodeid)))

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
1 skipped, 1 warning in 1.57s
2025-04-15 15:32:00,839 - INFO - 

2025-04-15 15:32:00,840 - INFO - TEST CASE 4 Retry 0
2025-04-15 15:32:00,840 - INFO - ---------------
2025-04-15 15:32:00,840 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest


async def test_openai_chat_completion():
    with patch("theory_evaluation.llm_handler.OpenAI_llm.client") as mock_client:
        mock_response = AsyncMock()
        mock_response.choices[0].message.content = "chat completion content"
        mock_client.chat.completions.create.return_value = mock_response

2025-04-15 15:32:00,840 - INFO - ---------------
2025-04-15 15:32:03,662 - INFO - Test Result 1- True
2025-04-15 15:32:03,662 - INFO - Test Error 1 - C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
s                                                                        [100%]
============================== warnings summary ===============================
temp/temp.py::test_openai_chat_completion
  C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\_pytest\python.py:148: PytestUnhandledCoroutineWarning: async def functions are not natively supported and have been skipped.
  You need to install a suitable plugin for your async framework, for example:
    - anyio
    - pytest-asyncio
    - pytest-tornasync
    - pytest-trio
    - pytest-twisted
    warnings.warn(PytestUnhandledCoroutineWarning(msg.format(nodeid)))

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
1 skipped, 1 warning in 1.46s
2025-04-15 15:32:03,663 - INFO - 

2025-04-15 15:32:03,664 - INFO - TEST CASE 5 Retry 0
2025-04-15 15:32:03,664 - INFO - ---------------
2025-04-15 15:32:03,664 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest


async def test_execute_text_generation():
    with patch("theory_evaluation.llm_handler.OpenAI_llm._run", new_callable=AsyncMock) as mock_run:
        mock_run.return_value.__aiter__.return_value = ["response content"]

2025-04-15 15:32:03,664 - INFO - ---------------
2025-04-15 15:32:05,960 - INFO - Test Result 1- True
2025-04-15 15:32:05,960 - INFO - Test Error 1 - C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
s                                                                        [100%]
============================== warnings summary ===============================
temp/temp.py::test_execute_text_generation
  C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\_pytest\python.py:148: PytestUnhandledCoroutineWarning: async def functions are not natively supported and have been skipped.
  You need to install a suitable plugin for your async framework, for example:
    - anyio
    - pytest-asyncio
    - pytest-tornasync
    - pytest-trio
    - pytest-twisted
    warnings.warn(PytestUnhandledCoroutineWarning(msg.format(nodeid)))

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
1 skipped, 1 warning in 1.32s
2025-04-15 15:32:05,961 - INFO - 

2025-04-15 15:32:05,961 - INFO - TEST CASE 6 Retry 0
2025-04-15 15:32:05,961 - INFO - ---------------
2025-04-15 15:32:05,961 - INFO - 
import asyncio
import json
import os

from openai import AzureOpenAI, OpenAI

import pytest


async def test_execute_vision():
    with patch("theory_evaluation.llm_handler.OpenAI_llm._run", new_callable=AsyncMock) as mock_run:
        mock_run.return_value.__aiter__.return_value = ["response content"]

2025-04-15 15:32:05,962 - INFO - ---------------
2025-04-15 15:32:08,484 - INFO - Test Result 1- True
2025-04-15 15:32:08,484 - INFO - Test Error 1 - C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\pytest_asyncio\plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
s                                                                        [100%]
============================== warnings summary ===============================
temp/temp.py::test_execute_vision
  C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\_pytest\python.py:148: PytestUnhandledCoroutineWarning: async def functions are not natively supported and have been skipped.
  You need to install a suitable plugin for your async framework, for example:
    - anyio
    - pytest-asyncio
    - pytest-tornasync
    - pytest-trio
    - pytest-twisted
    warnings.warn(PytestUnhandledCoroutineWarning(msg.format(nodeid)))

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
1 skipped, 1 warning in 1.53s
2025-04-15 15:32:08,486 - INFO - End Processing file: theory_evaluation\llm_handler.py

2025-04-15 15:32:08,486 - INFO - Start Processing file: theory_evaluation\llm_utils.py
2025-04-15 15:32:08,487 - INFO - Hello World
2025-04-15 15:32:08,488 - INFO - []
2025-04-15 15:32:09,903 - INFO - function_names - ['initialise_prompt', 'initialise_settings']
2025-04-15 15:32:13,914 - WARNING - Stripped Markdown-style triple backtick fences from LLM output.
2025-04-15 15:32:18,229 - INFO - End Processing file: theory_evaluation\llm_utils.py

2025-04-15 15:32:18,230 - INFO - Start Processing file: theory_evaluation\__init__.py
2025-04-15 15:32:18,232 - INFO - Hello World
2025-04-15 15:32:18,233 - INFO - []
2025-04-15 15:32:18,233 - WARNING - No public functions found in theory_evaluation\__init__.py. Skipping test generation.

